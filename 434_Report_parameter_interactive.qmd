---
title: "Test"
format: 
  html: 
    toc: true
editor: visual
---

## Quarto


```{r 01_settings, include=FALSE}

current_year <- 2021
knitr::opts_chunk$set(echo = FALSE, results = 'hold')

```

```{r 02_packages, include=FALSE}

library(dplyr)
# library(tidyr)
library(ggplot2)
library(lubridate)
library(flextable)
# library(glue)
library(readxl)
library(purrr)
library(glue)
# library(leftcensored)   # DHJ's package (https://github.com/DagHjermann/leftcensored)
library(scico)            # colour palettes incl. "Vik" (https://github.com/thomasp85/scico)

library(ggiraph)
library(cowplot)

# library(safejoin) # https://github.com/moodymudskipper/safejoin

# source("01_Get_chemical_data_NIVAbasen_functions.R")  # for get_standard_parametername()
# source("824_Report_for_scientists_functions.R")
source("420_Report_paramgroup_functions.R", encoding = "UTF-8")
source("125_Calculate_trends_leftadjusted_functions.R")
source("431_Report_parameter_functions.R")
source("002_Utility_functions.R")

```

## Medians and trends    

```{r 03_medians_data1}

#
# Get data 
#


# debugonce(get_data_medians)
dat_temporary <- list(
  get_data_medians(param = params$param, 
                   species = "Gadus morhua",
                   tissue = ifelse(params$param %in% "HG", "Muskel", "Lever"),
                   basis = params$basis_medians, 
                   include_year = current_year),
  get_data_medians(param = params$param, 
                   species = "Somateria mollissima",
                   tissue = "Blod",
                   basis = "WW", 
                   include_year = current_year),
  get_data_medians(param = params$param, 
                   species = "Somateria mollissima",
                   tissue = "Egg",
                   basis = "WW", 
                   include_year = current_year),
  get_data_medians(param = params$param, 
                   species = "Mytilus edulis",
                   tissue = "Whole soft body",
                   basis = "WW", 
                   include_year = current_year)
)


# levels(dat_temporary[[1]]$Station)
# levels(dat_temporary[[2]]$Station) 

#
# Stations - for corrrect ordering
#
lookup_stations <- read.csv("Input_data/Lookup_tables/Lookup_stationorder.csv") # %>%


```

```{r 03_medians_data2}

#
# Combine cod and eider duck as one group  
#

eider_blood <- "19N Kongsfjorden (eider duck blood)"
eider_egg <- "19N Kongsfjorden (eider duck egg)"

#
# Make 'dat_medians_list'  
#

dat_medians_list <- list()

# List element 1: cod and eider duck

if (nrow(dat_temporary[[2]]) > 0){
  dat_medians_list[[1]] <- bind_rows(
    dat_temporary[[1]],
    dat_temporary[[2]] %>% mutate(Station = eider_blood),
    dat_temporary[[3]] %>% mutate(Station = eider_egg)
  )
} else {
  dat_medians_list[[1]] <- dat_temporary[[1]]
}

dat_medians_list[[1]]$Station <- factor(dat_medians_list[[1]]$Station, 
                                        levels = c(levels(dat_temporary[[1]]$Station), eider_blood, eider_egg))

# For Hg: add an asterisk after station names for stations that are NOT length-adjusted (for Hg only)
# - these data are also used for 'ratio plots' (last year's concentrations)  
if (params$param %in% "HG" & params$basis_medians %in% "WWa"){
  # View(dat_medians_list[[1]])
  tab <- xtabs(~Basis + Station, dat_medians_list[[1]])
  not_length_adjusted <- colnames(tab)[tab[2,] == 0]
  sel <- levels(dat_medians_list[[1]]$Station) %in% not_length_adjusted
  levels(dat_medians_list[[1]]$Station)[sel] <- paste(levels(dat_medians_list[[1]]$Station)[sel], "*")
}


# levels(dat_medians_list[[1]]$Station)

# List element 2 = blue mussel

dat_medians_list[[2]] <- dat_temporary[[4]]

map(dat_medians_list, nrow)

```
### a. First

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

### a. Heading

```{r}
1 + 1
```

You can add options to executable code like this

### b. One more heading

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

### a. Heading

```{r}
1 + 1
```

You can add options to executable code like this

### b. One more heading

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).


## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

### a. Heading

```{r}
1 + 1
```

You can add options to executable code like this

### b. One more heading

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).



